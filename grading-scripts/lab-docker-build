#!/usr/bin/bash
#
# Copyright 2019 Red Hat, Inc.
#
# NAME
#     lab-docker-build - grading script for DO288 ch01s04 GE
#
# SYNOPSIS
#     lab-docker-build {start|finish}
#
#        start   - prepare the system for starting the lab
#        finish  - perform post-lab cleanup
#
# DESCRIPTION
#     This script, based on singular argument, either does setup, grading,
#     cleanup, or solve for the particular lab of awesomeness.
#
# CHANGELOG
#   * Wed May 22 2019 Fernando Lozano <flozano@redhat.com>
#   - Updated for the shared instance classroom and shlib refactoring
#   * Wed Mar 20 2019 Ricardo Jun <jtaniguc@redhat.com>
#   - Updated to support OCP4
#   * Thu Oct 04 2017 Fernando Lozano <flozano@redhat.com>
#   - original code


PATH=/usr/bin:/bin:/usr/sbin:/sbin:/usr/local/bin

# Initialize and set some variables
run_as_root='true'

# Required by the do288 shlib
this='docker-build'
title='GE: Deploying an Application to an OpenShift Cluster'


# This defines which subcommands are supported (setup, grade, etc.).
# Corresponding lab_COMMAND functions must be defined.
declare -a valid_commands=(start finish)


function lab_start {

  ocp4_print_prereq_header

  ocp4_verify_local_clone_exist
  ocp4_is_cluster_up
  print_line ' Checking required artifacts:'
  ### example check for custom image (this exercise doesn't use any)
  #ocp4_verify_prereq_images 'flozanorht/php-ubi'
  ### the former is a vararg shortcut for:
  #ocp4_pad "Image 'flozanorht/php-ubi' is available"
  #if ocp4_check_image_exists 'flozanorht/php-ubi' 'quay.io'
  #then
  #  print_SUCCESS
  #else
  #  print_FAIL
  #fi
  ### example checking for supported image (most exercises shouldn't need this)
  #ocp4_pad "Image 'ubi8/ubi:8.0' is available"
  #if ocp4_check_image_exists 'ubi8/ubi:8.0' 'registry.access.redhat.com'
  #then
  #  print_SUCCESS
  #else
  #  print_FAIL
  #fi
  ocp4_verify_prereq_git_projects 'ubi-echo'
  ### the former is a vararg shortcut for:
  #ocp4_pad "Project 'ubi-echo' exists in student's GitHub"
  #if ocp4_check_github_repo_exists 'DO288-apps' 'ubi-echo' 'master' "${RHT_OCP4_GITHUB_USER}"
  #then
  #  print_SUCCESS
  #else
  #  print_FAIL
  #fi
  ocp4_fail_if_project_exists "${RHT_OCP4_DEV_USER}-${this}"

  ocp4_print_setup_header

  ocp4_grab_lab_files

  ocp4_print_setup_footer
}


function lab_finish {

  ocp4_print_cleanup_header

  ocp4_login_as_developer
  ocp4_cleanup_lab_files
  ocp4_delete_project "${RHT_OCP4_DEV_USER}-${this}"
  ocp4_verify_local_clone_clean

  ocp4_print_cleanup_footer
}


############### Don't EVER change anything below this line ###############

# Source library of functions
source /usr/local/lib/${function_lib}
source /usr/local/lib/${platform_lib}

grading_main_program "$@"
